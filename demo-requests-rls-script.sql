-- üéØ RLS PARA TABLA DEMO_REQUESTS
-- Aplicando las mismas reglas exitosas de waitlist
-- Configuraci√≥n para formulario p√∫blico de solicitudes de demo

-- ============================================
-- LIMPIAR CONFIGURACI√ìN ANTERIOR
-- ============================================

-- Deshabilitar RLS temporalmente para limpiar
ALTER TABLE public.demo_requests DISABLE ROW LEVEL SECURITY;

-- Eliminar pol√≠ticas existentes si existen
DROP POLICY IF EXISTS "Default view policy" ON public.demo_requests;
DROP POLICY IF EXISTS "Authenticated users can insert demo requests" ON public.demo_requests;
DROP POLICY IF EXISTS "Restricted update policy" ON public.demo_requests;
DROP POLICY IF EXISTS "Restricted delete policy" ON public.demo_requests;
DROP POLICY IF EXISTS "Admins have full access" ON public.demo_requests;
DROP POLICY IF EXISTS "Users can view demo requests" ON public.demo_requests;
DROP POLICY IF EXISTS "Users can insert demo requests" ON public.demo_requests;
DROP POLICY IF EXISTS "Admins can update demo requests" ON public.demo_requests;
DROP POLICY IF EXISTS "Admins can delete demo requests" ON public.demo_requests;

-- ============================================
-- HABILITAR RLS
-- ============================================

ALTER TABLE public.demo_requests ENABLE ROW LEVEL SECURITY;

-- ============================================
-- POL√çTICAS RLS (SIGUIENDO PATR√ìN EXITOSO DE WAITLIST)
-- ============================================

-- üëÄ Policy for selecting demo requests
-- Aplicando el mismo patr√≥n exitoso: USING (true) sin restricci√≥n de roles
CREATE POLICY "Users can view demo requests" ON public.demo_requests
FOR SELECT
USING (true);

-- üìù Policy for inserting new demo requests
-- CAMBIO IMPORTANTE: Permitir inserci√≥n p√∫blica como en waitlist
-- El script original requer√≠a auth.uid() pero necesitamos formulario p√∫blico
CREATE POLICY "Users can insert demo requests" ON public.demo_requests
FOR INSERT
WITH CHECK (true);

-- ‚úèÔ∏è Policy for updating demo requests (restricted to admin)
-- Manteniendo la restricci√≥n admin como en waitlist
CREATE POLICY "Admins can update demo requests" ON public.demo_requests
FOR UPDATE
USING (auth.jwt()->'app_metadata'->>'role' = 'admin');

-- üóëÔ∏è Policy for deleting demo requests (restricted to admin)
-- Manteniendo la restricci√≥n admin como en waitlist
CREATE POLICY "Admins can delete demo requests" ON public.demo_requests
FOR DELETE
USING (auth.jwt()->'app_metadata'->>'role' = 'admin');

-- ============================================
-- √çNDICES PARA OPTIMIZACI√ìN
-- ============================================

-- Crear √≠ndices basados en campos comunes de demo_requests
-- Ajustar seg√∫n la estructura real de la tabla
CREATE INDEX IF NOT EXISTS idx_demo_requests_email ON public.demo_requests(email);
CREATE INDEX IF NOT EXISTS idx_demo_requests_created_at ON public.demo_requests(created_at);
CREATE INDEX IF NOT EXISTS idx_demo_requests_status ON public.demo_requests(status);

-- ============================================
-- VERIFICACI√ìN DE CONFIGURACI√ìN
-- ============================================

-- Verificar que RLS est√° habilitado
SELECT 
    'üîí RLS STATUS DEMO_REQUESTS:' as info,
    schemaname,
    tablename,
    CASE 
        WHEN rowsecurity THEN '‚úÖ ENABLED' 
        ELSE '‚ùå DISABLED' 
    END as rls_status
FROM pg_tables 
WHERE tablename = 'demo_requests' AND schemaname = 'public';

-- Verificar pol√≠ticas activas
SELECT 
    'üìã DEMO_REQUESTS POLICIES:' as info,
    policyname,
    cmd as operation,
    CASE 
        WHEN cmd = 'INSERT' THEN '‚úÖ Public form functional'
        WHEN cmd = 'SELECT' THEN '‚úÖ Public reading allowed'
        WHEN cmd = 'UPDATE' THEN 'üîê Admin only'
        WHEN cmd = 'DELETE' THEN 'üîê Admin only'
        ELSE cmd
    END as description
FROM pg_policies 
WHERE tablename = 'demo_requests' AND schemaname = 'public'
ORDER BY cmd;

-- ============================================
-- COMPARACI√ìN CON SCRIPT ORIGINAL
-- ============================================

SELECT 
    'üîÑ CAMBIOS APLICADOS:' as analisis,
    'Script original: INSERT requer√≠a auth.uid()' as problema_anterior,
    'Script corregido: INSERT permite formulario p√∫blico' as solucion_aplicada,
    'Mismas reglas exitosas de waitlist aplicadas' as patron_usado,
    'Formulario p√∫blico de demo requests ahora funcional' as resultado;

-- ============================================
-- TEST DE INSERCI√ìN (OPCIONAL)
-- ============================================

-- Test de inserci√≥n p√∫blica (ajustar campos seg√∫n estructura real)
/*
INSERT INTO public.demo_requests (
    name,
    email,
    company,
    message,
    status
) VALUES (
    'Test Demo Request',
    'test-demo-' || extract(epoch from now()) || '@example.com',
    'Test Company',
    'Test de formulario p√∫blico de demo requests',
    'pending'
);
*/

-- ============================================
-- RESUMEN FINAL
-- ============================================

SELECT 
    'üéâ DEMO_REQUESTS RLS CONFIGURADO' as status,
    '‚úÖ Mismas reglas exitosas de waitlist aplicadas' as patron,
    '‚úÖ Formulario p√∫blico habilitado (INSERT sin auth)' as funcionalidad,
    '‚úÖ Seguridad admin mantenida (UPDATE/DELETE)' as seguridad,
    '‚úÖ √çndices creados para optimizaci√≥n' as performance,
    'Configuraci√≥n lista para formulario p√∫blico' as resultado;

-- ============================================
-- DIFERENCIAS CON SCRIPT ORIGINAL
-- ============================================

/*
üìù CAMBIOS REALIZADOS:

‚ùå SCRIPT ORIGINAL PROBLEM√ÅTICO:
   CREATE POLICY "Authenticated users can insert demo requests"
   FOR INSERT
   WITH CHECK (auth.uid() IS NOT NULL);  -- Requer√≠a autenticaci√≥n

‚úÖ SCRIPT CORREGIDO (PATR√ìN WAITLIST):
   CREATE POLICY "Users can insert demo requests"
   FOR INSERT
   WITH CHECK (true);  -- Permite formulario p√∫blico

üéØ RESULTADO:
   - Formulario p√∫blico funcional
   - Misma configuraci√≥n exitosa de waitlist
   - Sin errores 42501
   - Seguridad mantenida donde es necesaria
*/

-- ============================================
-- INSTRUCCIONES DE USO
-- ============================================

/*
üìã PASOS PARA APLICAR:

1. ‚úÖ Ejecutar este script completo en Supabase SQL Editor
2. ‚úÖ Verificar que no hay errores en la ejecuci√≥n
3. ‚úÖ Probar formulario de demo requests en la aplicaci√≥n
4. ‚úÖ Confirmar que las inserciones funcionan sin error 42501
5. ‚úÖ Verificar que solo admins pueden actualizar/eliminar

üéØ ESTE SCRIPT RESUELVE:
   - RLS habilitado en demo_requests
   - Formulario p√∫blico funcional
   - Seguridad apropiada
   - Optimizaci√≥n de rendimiento
*/